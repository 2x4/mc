/*
 * X3dBrowser.java
 *
 * Created on 2009/09/08, 0:46:13
 */
package mocomp;

import java.awt.*;
import java.util.HashMap;
import javax.swing.*;

import org.web3d.vrml.sav.InputSource;
import org.web3d.x3d.sai.*;

/**
 *
 * @author yukawa
 */
public class X3dBrowser extends javax.swing.JPanel {

    private ExternalBrowser x3dBrowser;
    private X3DNode timer;

    /**
     * Creates new form X3dBrowser2
     */
    public X3dBrowser() {
        initComponents();
        setLayout(new BorderLayout());

        // Setup browser parameters
        HashMap<String, Object> requestedParameters = new HashMap<>();
//    requestedParameters.put("Xj3D_ShowConsole", Boolean.TRUE);
        requestedParameters.put("Xj3D_StatusBarShown", Boolean.TRUE);
        requestedParameters.put("Xj3D_FPSShown", Boolean.TRUE);
        requestedParameters.put("Xj3D_NavBarShown", Boolean.TRUE);
//    requestedParameters.put("Xj3D_LocationShown", Boolean.TRUE);
//    requestedParameters.put("Xj3D_OpenButtonShown", Boolean.TRUE);
//    requestedParameters.put("Xj3D_ReloadButtonShown", Boolean.TRUE);
        requestedParameters.put("TextureQuality", "medium");
        requestedParameters.put("Antialiased", Boolean.TRUE);
        requestedParameters.put("Xj3D_AntialiasingQuality", "high");

        X3DComponent x3dComp = BrowserFactory.createX3DComponent(requestedParameters);
        JComponent x3dPanel = (JComponent) x3dComp;
        add(x3dPanel, BorderLayout.CENTER);

        // Get an external browser
        x3dBrowser = x3dComp.getBrowser();
        x3dPanel.setSize(500, 500);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    public Boolean load(InputSource is) {
        X3DScene mainScene = x3dBrowser.createX3DFromURL(new String[]{is.getURL()});
        x3dBrowser.replaceWorld(mainScene);
        timer = mainScene.getNamedNode("TIMER");
        if (timer == null) {
            System.out.println("Couldn't find material named: TIMER");
            return false;
        }
        return true;
    }

    public Boolean timerEnabled(Boolean enable) {
        SFBool enabled = (SFBool) timer.getField("enabled");
        enabled.setValue(enable);
        return true;
    }

}
