//			   SFRotation.java
//
//	       Copyright (C) 1998, 1999 Takashi Yukawa
//
//		    This java source file conforms
//		GNU GENERAL PUBLIC LICENSE Version 2.
//
// Author:  Takashi Yukawa <yukawa@jc.akeihou-u.ac.jp>
// Created: Dec.13, 1998
// Revised: Jan.17, 1999
//
package vecmath;

import java.text.*;

public class SFRotation {
  private float x;
  private float y;
  private float z;
  private float w;

  public SFRotation() {
    x = 0.0F;
    y = 0.0F;
    z = 1.0F;
    w = 0.0F;
  }

  public SFRotation(Euler e) {
    fromEuler(e);
  }

  public final void fromEuler(Euler e) {
    float sy = (float)Math.sin(e.getYawRad() * 0.5);
    float sp = (float)Math.sin(e.getPitchRad() * 0.5);
    float sr = (float)Math.sin(e.getRollRad() * 0.5);
    float cy = (float)Math.cos(e.getYawRad() * 0.5);
    float cp = (float)Math.cos(e.getPitchRad() * 0.5);
    float cr = (float)Math.cos(e.getRollRad() * 0.5);
    
    float pw = cy * cp * cr + sy * sp * sr;
    float px = cy * cp * sr - sy * sp * cr;
    float py = cy * sp * cr + sy * cp * sr;
    float pz = sy * cp * cr - cy * sp * sr;

    float n = (float)Math.sqrt(px * px + py * py + pz * pz);
    float t = (float)Math.acos(pw * pw - px * px - py * py - pz * pz); // w*w - n*n

    x = -px / n;
    y = -py / n;
    z = -pz / n;
    w = 2.0F * (float)Math.PI - t;
  }

  public final String toString() {
    NumberFormat nf = NumberFormat.getInstance();
    nf.setMaximumFractionDigits(4);
    nf.setMinimumFractionDigits(4);
    return (nf.format(x) + " " + nf.format(y) + " " +
	    nf.format(z) + " " + nf.format(w));
  }
}
